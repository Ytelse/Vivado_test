--------------- Initial state ---------------
r1 = 3
r2 = 10
r3 = 23
r4 = 8
r5 = 4
r6 = 26
r7 = 25
r8 = 5
r9 = 0
r10 = 1
r11 = 2
r12 = 13
r13 = 16
r14 = 18
r15 = 17
r16 = 14
r17 = 12
r18 = 15
r19 = 19
r20 = 22
r21 = 21
r22 = 20
r23 = 29
r24 = 27
r25 = 6
r26 = 9
r27 = 7
r28 = 24
r29 = 30
r30 = 29
r31 = 28

----------------- Test code -----------------

  sw $0, 0($0)

## Should not forward from writes to reg zero.
  addu $0, $1, $2
  nop
  bne $0, $9, test_fail
  nop
  nop
  nop
  nop

## Should not forward from writes to reg zero.
  addu $0, $1, $2
  nop
  beq $0, $9, 1f
  nop
  nop
  nop
  nop
  j test_fail
  nop
  nop
  nop
  nop

## Should forward from writes to any other register
1:
  addiu $1, $2, 4        # r1 = 10 + 4 = 14
  nop
  bne $1, $16, test_fail
  nop
  nop
  nop
  nop

  slt $2, $8, $15        # r2 = 5 < 17 = 1
  nop
  bne $2, $10, test_fail
  nop
  nop
  nop
  nop

  addu $3, $10, $12      # r3 = 1 + 13 = 14
  nop
  bne $3, $16, test_fail
  nop
  nop
  nop
  nop

  sll $4, $12, 1         # r4 = 13 << 1 = 26
  nop
  bne $4, $6, test_fail
  nop
  nop
  nop
  nop

  slt $5, $31, $27       # r5 = 28 < 7 = 0
  nop
  bne $5, $0, test_fail
  nop
  nop
  nop
  nop

  lui $6, 1
  nop
  beq $6, $4, test_fail
  nop
  nop
  nop
  nop

  addu $7, $0, $0
  nop
  bne $7, $0, test_fail
  nop
  nop
  nop
  nop
  
  addu $8, $0, $0
  nop
  bne $8, $0, test_fail
  nop
  nop
  nop
  nop

  addiu $9, $0, 1f
  nop
  jr $9                 # r9 was zero, will restart test if incorrect hazard management.
  nop
  nop
  nop
  nop

1:
  addu $9, $0, $0
  nop
  bne $9, $0, test_fail
  nop
  nop
  nop
  nop

  addu $10, $0, $0
  nop
  bne $10, $0, test_fail
  nop
  nop
  nop
  nop

  addu $11, $0, $0
  nop
  bne $11, $0, test_fail
  nop
  nop
  nop
  nop

  addu $12, $0, $0
  nop
  bne $12, $0, test_fail
  nop
  nop
  nop
  nop

  addu $13, $0, $0
  nop
  bne $13, $0, test_fail
  nop
  nop
  nop
  nop

  addu $14, $0, $0
  nop
  bne $14, $0, test_fail
  nop
  nop
  nop
  nop

  addu $15, $0, $0
  nop
  bne $15, $0, test_fail
  nop
  nop
  nop
  nop

  addu $16, $0, $0
  nop
  bne $16, $0, test_fail
  nop
  nop
  nop
  nop

  addu $17, $0, $0
  nop
  bne $17, $0, test_fail
  nop
  nop
  nop
  nop

  addu $18, $0, $0
  nop
  bne $18, $0, test_fail
  nop
  nop
  nop
  nop

  addu $19, $0, $0
  nop
  bne $19, $0, test_fail
  nop
  nop
  nop
  nop

  addu $20, $0, $0
  nop
  bne $20, $0, test_fail
  nop
  nop
  nop
  nop

  addu $21, $0, $0
  nop
  bne $21, $0, test_fail
  nop
  nop
  nop
  nop

  addu $22, $0, $0
  nop
  bne $22, $0, test_fail
  nop
  nop
  nop
  nop

  addu $23, $0, $0
  nop
  bne $23, $0, test_fail
  nop
  nop
  nop
  nop

  addu $24, $0, $0
  nop
  bne $24, $0, test_fail
  nop
  nop
  nop
  nop

  addu $25, $0, $0
  nop
  bne $25, $0, test_fail
  nop
  nop
  nop
  nop

  addu $26, $0, $0
  nop
  bne $26, $0, test_fail
  nop
  nop
  nop
  nop

  addu $27, $0, $0
  nop
  bne $27, $0, test_fail
  nop
  nop
  nop
  nop

  addu $28, $0, $0
  nop
  bne $28, $0, test_fail
  nop
  nop
  nop
  nop

  addu $29, $0, $0
  nop
  bne $29, $0, test_fail
  nop
  nop
  nop
  nop

  addu $30, $0, $0
  nop
  bne $30, $0, test_fail
  nop
  nop
  nop
  nop

  addu $31, $0, $0
  nop
  bne $31, $0, test_fail
  nop
  nop
  nop
  nop

  addiu $1, $0, jal_ret_addr
  nop
  nop
  nop
  nop
  jal jal_ret_addr
jal_ret_addr:
  nop
  bne $31, $1, test_fail

test_success:
  sw $0, 1($0)
  j .
  nop
  nop
  nop
  nop

test_fail:
  sw $0, 0($0)
  j .

---------- Expected state updates -----------

dmem_word[0] = 0

r1 = 14
r2 = 1
r3 = 14
r4 = 26
r5 = 0
r6 = 0x10000
r7 = 0
r8 = 0
r9 = 0x14C
r9 = 0
r10 = 0
r11 = 0
r12 = 0
r13 = 0
r14 = 0
r15 = 0
r16 = 0
r17 = 0
r18 = 0
r19 = 0
r20 = 0
r21 = 0
r22 = 0
r23 = 0
r24 = 0
r25 = 0
r26 = 0
r27 = 0
r28 = 0
r29 = 0
r30 = 0
r31 = 0
r1  = 0x3E8
r31 = 0x3E8

dmem_word[1] = 0

------------ Timeout cycle count ------------
2630